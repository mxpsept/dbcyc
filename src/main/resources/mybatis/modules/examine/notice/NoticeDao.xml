<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kcm.modules.examine.notice.dao.NoticeDao">
    <cache/>

    <resultMap id="BaseResultMap" type="com.kcm.modules.examine.notice.entity.BizNoticeInfor">
        <id property="noticeId" column="notice_id" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="noticeTopic" column="notice_topic" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="noticeContent" column="notice_content" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="feedbackDayNum" column="feedback_day_num" javaType="java.lang.Integer" jdbcType="INTEGER"/>
        <result property="releaseState" column="release_state" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="releaseDate" column="release_date" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="userId" column="user_id" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="noticepId" column="notice_p_id" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="remark" column="remark" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="active" column="active" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="createUserId" column="create_user_id" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="createDeptId" column="create_dept_id" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="editUserId" column="edit_user_id" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="editTime" column="edit_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="editDeptId" column="edit_dept_id" javaType="java.lang.String" jdbcType="VARCHAR"/>
    </resultMap>

    <!--  系统消息  -->
    <resultMap id="MessageResultMap" type="com.kcm.modules.examine.notice.entity.SysMessage">
        <id property="messageId" column="message_id" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="messageContent" column="message_content" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="userId" column="user_id" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="sendDate" column="send_date" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="RefColumns">
        n.notice_id, n.notice_topic, n.notice_content, n.feedback_day_num, n.release_date, n.user_id, n.notice_p_id,
        n.remark, n.create_user_id, n.create_time, n.create_dept_id, n.edit_user_id, n.edit_time, n.edit_dept_id,
        case n.release_state when '0' then '未发布' when '1' then '已发布' else '未知' end release_state,
        case n.active when '0' then '无效' when '1' then '有效' end active
    </sql>

    <!--  批量初始化系统通知反馈信息  -->
    <insert id="saveBizNoticeFeedbackBatch">
        insert into BIZ_NOTICE_FEEDBACK(NOTICE_F_ID, FEEDBACK_CONTENT, MR_DEPT_ID, USER_ID, FEEDBACK_STATE, NOTICE_ID)
        values
        <foreach collection="noticeFeedbacks" item="item" index="index" separator="," open="(" close=")">
            #{item.noticefId}, #{item.feedbackContent}, #{item.mrDeptId}, #{item.userId}, #{item.feedbackState}, #{item.noticeId}
        </foreach>
    </insert>

    <!--  填写系统通知反馈信息  -->
    <update id="updateBizNoticeFeedback">
        update BIZ_NOTICE_FEEDBACK
        <set>
            <if test="noticefId != null">
                NOTICE_F_ID = #{noticefId, jdbcType=VARCHAR},
            </if>
            <if test="feedbackContent != null">
                FEEDBACK_CONTENT = #{feedbackContent, jdbcType=VARCHAR},
            </if>
            <if test="mrDeptId != null">
                MR_DEPT_ID = #{mrDeptId, jdbcType=VARCHAR},
            </if>
            <if test="feedbackDate != null">
                FEEDBACK_DATE = #{feedbackDate, jdbcType=TIMESTAMP},
            </if>
            <if test="userId != null">
                USER_ID = #{userId, jdbcType=VARCHAR},
            </if>
            <if test="feedbackState != null">
                FEEDBACK_STATE = #{feedbackState, jdbcType=VARCHAR},
            </if>
            <if test="noticeId != null">
                NOTICE_ID = #{noticeId, jdbcType=VARCHAR},
            </if>
        </set>
        where USER_ID = #{userId}
        and NOTICE_ID = #{noticeId}
    </update>

    <!--  添加系统消息  -->
    <insert id="saveMessage" parameterType="com.kcm.modules.examine.notice.entity.SysMessage">
        insert into SYS_MESSAGE
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="messageId != null">
                message_id,
            </if>
            <if test="messageContent != null">
                message_content,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="sendDate != null">
                send_date,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="messageId != null">
                #{messageId, jdbcType=VARCHAR},
            </if>
            <if test="messageContent != null">
                #{messageContent, jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                #{userId, jdbcType=VARCHAR},
            </if>
            <if test="sendDate != null">
                #{sendDate, jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>

    <!--  批量插入系统消息反馈信息  -->
    <insert id="saveMessageFeedbackBatch">
        insert into SYS_MESSAGE_FEEDBACK(MESSAGE_F_ID, USER_ID, READ_STATE, MESSAGE_ID)
        values
        <foreach collection="feedbackList" item="item" index="index" separator="," open="(" close=")">
            #{item.messagefId}, #{item.userId}, #{item.readState}, #{item.messageId}
        </foreach>
    </insert>

    <!--  初始化系统消息反馈信息  -->
    <insert id="saveMessageFeedback">
        insert into SYS_MESSAGE_FEEDBACK
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="messagefId != null">
                MESSAGE_F_ID,
            </if>
            <if test="userId != null">
                USER_ID,
            </if>
            <if test="readState != null">
                READ_STATE,
            </if>
            <if test="messageId != null">
                MESSAGE_ID,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="messagefId != null">
                #{messagefId, jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                #{userId, jdbcType=VARCHAR},
            </if>
            <if test="readState != null">
                #{readState, jdbcType=VARCHAR},
            </if>
            <if test="messageId != null">
                #{messageId, jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <!--  根据用户ID查询系统通知  -->
    <select id="queryByUserId" resultMap="BaseResultMap">
        select
        <include refid="RefColumns" />
        from BIZ_NOTICE_INFOR n
        where n.NOTICE_ID = (select NOTICE_ID from BIZ_NOTICE_FEEDBACK where USER_ID = #{userId})
    </select>

    <!--  根据用户ID查询系统消息  -->
    <select id="queryMessagesByUserId" resultMap="MessageResultMap">
        select * from SYS_MESSAGE
        where MESSAGE_ID = (select MESSAGE_ID from SYS_MESSAGE_FEEDBACK where USER_ID = #{userId})
    </select>

    <!--  读取系统消息  -->
    <update id="readMessageByMessageId">
        update SYS_MESSAGE_FEEDBACK
        set
        READ_STATE = '1'
        where MESSAGE_ID = #{messageId, jdbcType=VARCHAR}
        and USER_ID = #{userId, jdbcType=VARCHAR}
    </update>

</mapper>